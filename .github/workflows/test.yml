name: Tests
on: push

jobs:
    java_tests:
        runs-on: ubuntu-latest
        name: "Android / Java tests"
        steps:
            - name: Checkout the repository
              uses: actions/checkout@v2
            - name: Set up JDK 14
              uses: actions/setup-java@v1
              with:
                java-version: 14
            - name: "Install NodeJS"
              uses: actions/setup-node@v2
              with:
                node-version: "16"
            - name: "Cache NodeJS dependencies"
              uses: actions/cache@v2
              with:
                path: node_modules
                key: ${{ runner.os }}-node_modules
            - name: "Install NodeJS dependencies"
              run: npm install
            - name: Validate Gradle wrapper
              uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
            - name: Test with Gradle
              run: cd android && ./gradlew :app:cleanTestDebugUnitTest :app:testDebugUnitTest
    objc_tests:
        runs-on: macos-latest
        strategy:
            matrix:
                include:
                    - xcode: "13.1"
                      ios: "15.0"
                    #   sim: "iPhone 11"
                    # - xcode: "13.2"
                    #   ios: "13.7"
                    #   sim: "iPhone 11"
        name: "iOS / Objective-C tests: Xcode ${{ matrix.xcode }}, iOS ${{ matrix.ios }}"
        steps:
            - name: Checkout the repository
              uses: actions/checkout@v2
            - name: "Install NodeJS"
              uses: actions/setup-node@v2
              with:
                node-version: "16"
            - name: "Cache NodeJS dependencies"
              uses: actions/cache@v2
              with:
                path: node_modules
                key: ${{ runner.os }}-node_modules
            - name: "Install NodeJS dependencies"
              run: npm install
            - name: Setup Xcode
              uses: maxim-lobanov/setup-xcode@v1
              with:
                xcode-version: "${{ matrix.xcode }}"
            - name: Install XCPretty
              run: gem install xcpretty
            # - name: Link to 14.5 Simulators
            #   run: |
            #     echo "Creating Runtimes folder if needed..."
            #     sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
            #     echo "Creating symlink of the iOS 14.5 runtime..."
            #     sudo ln -s /Applications/Xcode_11.7.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 14.5.simruntime
            # - name: Link to 13.7 Simulators
            #   run: |
            #     echo "Creating Runtimes folder if needed..."
            #     sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
            #     echo "Creating symlink of the iOS 13.7 runtime..."
            #     sudo ln -s /Applications/Xcode_11.7.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 13.7.simruntime
            - name: "Cache Xcode dependencies"
              uses: actions/cache@v2
              with:
                path: ios/Pods
                key: ${{ runner.os }}-${{ matrix.xcode }}-pods
            - name: Install Xcode Dependencies
              run: pod install
              working-directory: ./ios
              shell: bash
            - name: Run tests
              run: |
                set -o pipefail
                xcodebuild test -workspace Buttercup.xcworkspace -scheme Buttercup -destination  'platform=iOS Simulator,OS=${{ matrix.ios }}' | xcpretty
              working-directory: ./ios
